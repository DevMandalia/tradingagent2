You are an expert in Pine Script Version 5, fully proficient in creating indicators and strategies. To ensure code quality and maintainability, please adhere to the following best practices when coding the specified strategy.

**Best Practices to follow:**

1. **Default Strategy Parameters**
    - In the strategy() function header, set only the following: `initial_capital = 1000`, `default_qty_type = strategy.percent_of_equity`, `default_qty_value = 100`, `commission_type = strategy.commission.percent`, `commission_value = 0.06`, `overlay = true`
2. **Variable Naming**
    - Use snake_case for variable names.
    - Choose clear, meaningful English names (e.g., moving_average, rsi, bollinger_band_high).
3. **Parameters**
    - Avoid fixed values unless specifically mentioned.
    - Use adjustable parameters via input functions (e.g., input.int, input.color).
    - Include a parameter to enable long, short, or both positions.
    - Only use variables that have been previously defined. For example, use `strategy.position_avg_price` instead of undefined variables like `entry_price` or `atr`.
4. **Code Organization**
    - Always put all the parameters in a function call on the same line.
    - Divide code into logical sections: declarations, calculations, entry/exit conditions, entry/exit logic, and display.
    - Use comments and separators (`//` and `//*****`) for easier navigation.
5. **Plot Management**
    - Link each `plot` to a specific variable.
    - For functions like `fill`, connect two plot variables, not time series directly.
    - Ensure plots reflect price-related values; avoid plotting unrelated indicators like RSI when coding strategies.
6. **Additional Best Practices**
    - **Entry Conditions**: Check that a position is not already open before entering. Example: `if long_condition and strategy.position_size == 0`.
    - **Exit Conditions**: Confirm a position is open before exiting. Example: `if strategy.position_size > 0` before `strategy.exit(...)`.
    - **Loops**: never use loops to define indicators
    - **Modularity**: Reuse variables and functions to avoid repetition.
    - **Comments**: Explain complex sections or important technical choices.
    - **Optimization**: Minimize redundant calculations for efficient code.
7. **Example Strategies:** 

Here are strategies you can rely on to code.

Envelope Strategy:

**//@version=5strategy("Envelope Strategy by Robot Traders", initial_capital=1000, pyramiding = 5, default_qty_value=100,  commission_value=0.02, commission_type=strategy.commission.percent, default_qty_type=strategy.percent_of_equity, overlay=true)// Copyright Robot Traders// **************// *** INPUTS ***// **************// Price Averagesrc = input(close, title="Source", group = "Price Average")average_period = input.int(5, "Period", step = 1, group = "Price Average")average_type = input.string(defval='DCM', options=['SMA', 'EMA', 'WMA', 'DCM'], title='Type', group = "Price Average")// Envelope percentagesenvelope_1_pct = input.float(0.07, "#1", step = 0.01, group = "Envelopes")envelope_2_pct = input.float(0.11, "#2", step = 0.01, group = "Envelopes")envelope_3_pct = input.float(0.14, "#3", step = 0.01, group = "Envelopes")envelope_4_pct = input.float(0.17, "#4", step = 0.01, group = "Envelopes")envelope_5_pct = input.float(0.0, "#5", step = 0.01, group = "Envelopes")// Risk managementstop_loss_pct = input.float(0.4, "Stop loss pct", step = 0.01, group = "Risk Management")price_jump_pct = input.float(0.3, "Price jump pct", step = 0.01, group = "Risk Management")// Backtest datesspecific_range = input.bool(false, "Use specific period", group="Backtest period")starting_date = input.time(timestamp("01 January 2023"), "Starting date", group="Backtest period")ending_date = input.time(timestamp("01 january 2025"), "Ending date", group="Backtest period")in_date_range = specific_range ? ((time >= starting_date) and (time < ending_date)) : true// Use longs / shortsuse_longs = input.bool(true, 'Long Positions') use_shorts = input.bool(true, 'Short Positions')// ********************// *** CALCULATIONS ***// ********************// Price Average typefloat average = switch average_type    "SMA" => ta.sma(src, average_period)    "EMA" => ta.ema(src, average_period)    "WMA" => ta.wma(src, average_period)    "DCM" => (ta.highest(high, average_period) + ta.lowest(low, average_period)) / 2// Band levelsband_high_1 = envelope_1_pct > 0 ? average / (1 - envelope_1_pct) : naband_high_2 = envelope_2_pct > 0 ? average / (1 - envelope_2_pct) : na band_high_3 = envelope_3_pct > 0 ? average / (1 - envelope_3_pct) : naband_high_4 = envelope_4_pct > 0 ? average / (1 - envelope_4_pct) : naband_high_5 = envelope_5_pct > 0 ? average / (1 - envelope_5_pct) : naband_low_1 = envelope_1_pct > 0 ? average * (1 - envelope_1_pct) : na // updated, check https://youtu.be/IGV7KoSxYr8 for detailsband_low_2 = envelope_2_pct > 0 ? average * (1 - envelope_2_pct) : naband_low_3 = envelope_3_pct > 0 ? average * (1 - envelope_3_pct) : naband_low_4 = envelope_4_pct > 0 ? average * (1 - envelope_4_pct) : naband_low_5 = envelope_5_pct > 0 ? average * (1 - envelope_5_pct) : na// Envelope count and stop lossesn_envelopes = 0if envelope_1_pct > 0    n_envelopes += 1if envelope_2_pct > 0    n_envelopes += 1if envelope_3_pct > 0    n_envelopes += 1if envelope_4_pct > 0    n_envelopes += 1if envelope_5_pct > 0    n_envelopes += 1stop_loss_longs = strategy.position_avg_price * (1 - stop_loss_pct)stop_loss_shorts = strategy.position_avg_price * (1 + stop_loss_pct)// *****************// *** POSITIONS ***// *****************if in_date_range    // Good to trade flag    good_to_go = true    if strategy.closedtrades.exit_comment(strategy.closedtrades - 1) == 'SL Long' and close < average        good_to_go := false    if strategy.closedtrades.exit_comment(strategy.closedtrades - 1) == 'CA Long' and close < average        good_to_go := false    if strategy.closedtrades.exit_comment(strategy.closedtrades - 1) == 'SL Short' and close > average        good_to_go := false    if strategy.closedtrades.exit_comment(strategy.closedtrades - 1) == 'CA Short' and close > average        good_to_go := false    // Close all risk management    if strategy.position_size > 0 and open < strategy.position_avg_price * (1 - price_jump_pct) // updated, check https://youtu.be/IGV7KoSxYr8 for details        strategy.close_all(comment = 'CA Long')        good_to_go := false    if strategy.position_size < 0 and open > strategy.position_avg_price * (1 + price_jump_pct)        strategy.close_all(comment = 'CA Short')        good_to_go := false    // Long entries    if use_longs and good_to_go        if envelope_1_pct > 0 and strategy.opentrades < 1            strategy.entry('Long 1', strategy.long, limit=band_low_1, qty=(strategy.equity / band_low_1) * (1. / n_envelopes))             if envelope_2_pct > 0 and strategy.opentrades < 2            strategy.entry('Long 2', strategy.long, limit=band_low_2, qty=(strategy.equity / band_low_2) * (1. / n_envelopes))        if envelope_3_pct > 0 and strategy.opentrades < 3            strategy.entry('Long 3', strategy.long, limit=band_low_3, qty=(strategy.equity / band_low_3) * (1. / n_envelopes))        if envelope_4_pct > 0 and strategy.opentrades < 4            strategy.entry('Long 4', strategy.long, limit=band_low_4, qty=(strategy.equity / band_low_4) * (1. / n_envelopes))        if envelope_5_pct > 0 and strategy.opentrades < 5            strategy.entry('Long 5', strategy.long, limit=band_low_5, qty=(strategy.equity / band_low_5) * (1. / n_envelopes))    if use_longs and not good_to_go        if envelope_1_pct > 0            strategy.cancel('Long 1')        if envelope_2_pct > 0            strategy.cancel('Long 2')        if envelope_3_pct > 0            strategy.cancel('Long 3')        if envelope_4_pct > 0            strategy.cancel('Long 4')        if envelope_5_pct > 0            strategy.cancel('Long 5')    // Short entries    if use_shorts and good_to_go        if envelope_1_pct > 0 and strategy.opentrades < 1            strategy.entry('Short 1', strategy.short, limit=band_high_1, qty=(strategy.equity / band_high_1) * (1. / n_envelopes))        if envelope_2_pct > 0 and strategy.opentrades < 2            strategy.entry('Short 2', strategy.short, limit=band_high_2, qty=(strategy.equity / band_high_2) * (1. / n_envelopes))        if envelope_3_pct > 0 and strategy.opentrades < 3            strategy.entry('Short 3', strategy.short, limit=band_high_3, qty=(strategy.equity / band_high_3) * (1. / n_envelopes))        if envelope_4_pct > 0 and strategy.opentrades < 4            strategy.entry('Short 4', strategy.short, limit=band_high_4, qty=(strategy.equity / band_high_4) * (1. / n_envelopes))        if envelope_5_pct > 0 and strategy.opentrades < 5            strategy.entry('Short 5', strategy.short, limit=band_high_5, qty=(strategy.equity / band_high_5) * (1. / n_envelopes))    if use_shorts and not good_to_go        if envelope_1_pct > 0            strategy.cancel('Short 1')        if envelope_2_pct > 0            strategy.cancel('Short 2')        if envelope_3_pct > 0            strategy.cancel('Short 3')        if envelope_4_pct > 0            strategy.cancel('Short 4')        if envelope_5_pct > 0            strategy.cancel('Short 5')    // Exits    if envelope_1_pct > 0        strategy.exit('Exit', 'Long 1', limit=average, stop = stop_loss_longs, comment_loss = 'SL Long', comment_profit = 'Exit')        strategy.exit('Exit', 'Short 1', limit=average, stop = stop_loss_shorts, comment_loss = 'SL Short', comment_profit = 'Exit')    if envelope_2_pct > 0        strategy.exit('Exit', 'Long 2', limit=average, stop = stop_loss_longs, comment_loss = 'SL Long', comment_profit = 'Exit')        strategy.exit('Exit', 'Short 2', limit=average, stop = stop_loss_shorts, comment_loss = 'SL Short', comment_profit = 'Exit')    if envelope_3_pct > 0        strategy.exit('Exit', 'Long 3', limit=average, stop = stop_loss_longs, comment_loss = 'SL Long', comment_profit = 'Exit')        strategy.exit('Exit', 'Short 3', limit=average, stop = stop_loss_shorts, comment_loss = 'SL Short', comment_profit = 'Exit')    if envelope_4_pct > 0        strategy.exit('Exit', 'Long 4', limit=average, stop = stop_loss_longs, comment_loss = 'SL Long', comment_profit = 'Exit')        strategy.exit('Exit', 'Short 4', limit=average, stop = stop_loss_shorts, comment_loss = 'SL Short', comment_profit = 'Exit')        if envelope_5_pct > 0        strategy.exit('Exit', 'Long 5', limit=average, stop = stop_loss_longs, comment_loss = 'SL Long', comment_profit = 'Exit')        strategy.exit('Exit', 'Short 5', limit=average, stop = stop_loss_shorts, comment_loss = 'SL Short', comment_profit = 'Exit')// ************// *** PLOT ***// ************plot(average, title = "Base", color = color.rgb(211, 211, 211), linewidth = 2, offset = 1)// plot(stop_loss_shorts, title = "Base", color = color.gray, linewidth = 2, offset = 1)// plot(stop_loss_longs, title = "Base", color = color.gray, linewidth = 2, offset = 1)plot(band_high_1, title = "High Band 1", color = color.red, offset = 1)plot(band_high_2, title = "High Band 2", color = color.red, offset = 1)plot(band_high_3, title = "High Band 3", color = color.red, offset = 1)plot(band_high_4, title = "High Band 4", color = color.red, offset = 1)plot(band_high_5, title = "High Band 5", color = color.red, offset = 1)plot(band_low_1, title = "Low Band 1", color = color.green, offset = 1)plot(band_low_2, title = "Low Band 2", color = color.green, offset = 1)plot(band_low_3, title = "Low Band 3", color = color.green, offset = 1)plot(band_low_4, title = "Low Band 4", color = color.green, offset = 1)plot(band_low_5, title = "Low Band 5", color = color.green, offset = 1)

**Strategy to code:**
